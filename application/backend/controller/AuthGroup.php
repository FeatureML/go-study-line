<?php

namespace app\backend\controller;

use houdunwang\arr\Arr;
use think\Controller;
use think\Request;

class AuthGroup extends Controller
{
    protected $db;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\common\model\AuthGroup();  //对象存储在一个db属性中
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function groupList()
    {
        $groupInfo = db('auth_group')->select();
        $this->assign('lists', $groupInfo);
        return $this->fetch();
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request $request
     * @return \think\Response
     */
    public function store(Request $request)
    {
        if ($request->isPost()) {
            $res = $this->db->store(input('post.'));
            if ($res["valid"]) {
                $this->success($res["msg"], "backend/auth_group/grouplist");
                exit;
            } else {
                $this->error($res["msg"]);
                exit;
            }
        }
    }

    /**
     * 编辑数据.
     * @param  int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function delete()
    {
        if (request()->isPost()) {
            $delGroup = db('auth_group')->delete(input("param.id"));
            if ($delGroup) {
                return json(['status' => 200, 'msg' => 'success']);
            } else {
                return json(['status' => 500, 'msg' => 'fail']);
            }
        }
        return json(['status' => 403, 'msg' => 'forbidden']);
    }

    /**
     * 用户组添加规则
     */
    public function addRules()
    {
        if(request()->isPost()){
            halt($_POST);

        }
        $id = input('param.id');
        $groupTitle = db('auth_group')->where('id',$id)->find()['title'];
        $allRules = Arr::tree(db('auth_rule')->select(), 'title', $fieldPri = 'id', $fieldPid = 'pid');
        $node_arr = array();
//        foreach ($allRules as $value) {
//            $conditions['node_id'] = $value['id'];
//            $conditions['role_id'] = $rid;
//            $count = $access->where($conditions)->count();
//            if ($count) {
//                $value['access'] = '1';
//            } else {
//                $value['access'] = '0';
//            }
//            $node_arr[] = $value;
//        }
//        halt($node_arr);
        $this->assign('groupTitle',$groupTitle);
        $this->assign('allRules',$allRules);
        return $this->fetch();
    }
}
